package drools.spring.rules


import rs.uns.ac.ftn.cdss.model.*;
import rs.uns.ac.ftn.cdss.model.util.*;
import rs.uns.ac.ftn.cdss.event.*;
import java.util.*;


agenda-group "monitoring"

rule "Problem sa kiseonikom"
	agenda-group "oxygen"
	lock-on-active true
	when
 		$oxEvent: OxygenEvent($patient : patient, $time : executionTime, $ol : oxygenLevel, oxygenLevel<70)
        not(
        	//U roku od 15m treba da postoji event istog pacijenta na kojem nije zabelezen porast kiseonika
            OxygenEvent(this != $oxEvent, patient == $patient, oxygenLevel>$ol) 
            over window:time(15m)
        )
    then
    	System.out.println("Event:");
        insert(new OxygenLevelNotGoodEvent($patient, "U zadnjih 15 minuta nisu zabelezeni porasti kiseonika"));
        drools.halt();
end


rule "Ubrzan srcani ritam"
	agenda-group "heartbeats"
	lock-on-active true
	when
 		$hbEvent: HeartbeatEvent($patient : patient, $time : executionTime)
        list : List(size>25) from accumulate(
        	//Pokupi sve evente istog pacijenta u roku od 10 sec
            $hbe:HeartbeatEvent(this != $hbEvent && patient==$patient)
            over window:time(10s),
            collectList($hbe)
        )
        
    then
    	System.out.println("Event:");    	
        insert(new HeartbeatNotGoodEvent($patient, "U 10 sekundi pacijent "+$patient.getName()+"imao vise od 25 otkucaja srca"));
        drools.halt();
end

rule "Hitno potrebna dijaliza"
	agenda-group "dialysis"
	lock-on-active true
	when
		$hbEvent: HeartbeatEvent($patient : patient, $time : executionTime)
		
		list : List(size>=1) from accumulate (
		$mr : Record(disease.name=="Hronicna bubrezna bolest") from $patient.getPatientHistory(),
		collectList($mr))
		
		//Treba da postoji 10 eventa otkucaj srca u roku od 10 sekundi
        Number(intValue>10) from accumulate(
            $hbe:HeartbeatEvent(this != $hbEvent, patient == $patient)
            over window:time(10s),
            count($hbe)
        )
        
        $urinating: UrinatingEvent($patient==patient, $initAmount:amount)
        
        //Saberi sve kolcine mokrace u poslednjih 12 sati
        Number(intValue < 100) from accumulate(
			$urin: UrinatingEvent(
				this != $urinating,
				patient == $patient,
				$amount: amount,
				this meets[12h] $urinating
			),
			init(int count = $initAmount;),
			action(count += $amount;),
			result(count)
		)
       
	then
		System.out.println("Evnet:");
        insert(new DialysisImmediatelyEvent($patient, "Potrebna hitna dijaliza"));
        drools.halt();
end